[package]
name = "beverage"
description = "Hypothetical Editor for Bevy. Also available as a t-shirt."
version = "0.1.0"
repository = "https://github.com/knutsoned/beverage"
edition = "2021"
license = "MIT OR Apache-2.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bevy = { version = "0.14", features = ["dynamic_linking", "serialize"] }

# for debug inspector feature
bevy_dev_tools = { version = "0.14", optional = true }

# app icon
#image = "0.25"
#winit = "0.30"

# sickle is now compatible with bevy 0.14
sickle_ui = { version = "0.2", git = "https://github.com/UmbraLuminosa/sickle_ui" }

# there will be an official crate release and then these can go away
sickle_macros = { version = "0.2", git = "https://github.com/UmbraLuminosa/sickle_ui" }
sickle_math = { version = "0.2", git = "https://github.com/UmbraLuminosa/sickle_ui" }
sickle_ui_scaffold = { version = "0.2", git = "https://github.com/UmbraLuminosa/sickle_ui" }

# i18n/l10n
bevy_fluent = { version = "0.10" }
fluent_content = "0.0.5"
unic-langid = { version = "0.9", features = ["macros"] }

# bevy_remote (BRP) core deps (mostly imported by bevy_defer_http)
ehttp = "0.5"
http-body-util = "0.1"
hyper = { version = "1.4", features = ["full"] }
smol = "2"
smol-hyper = { version = "0.1", default-features = false, features = ["async-io","smol"] }

# future stuff?
# haalka deps
bevy_asset_loader = "0.21"
bevy_nine_slice_ui = "0.7"
bevy_rand = "0.7"
# bevy_defer
#bevy_defer = { version = "0.12.1" }
#bevy_defer_http = { version = "0.0.4" }
# should be behind a scripting feature
#bevy_mod_scripting = "0.6.0"
# this is a placeholder (just a reminder to find or build a non-egui thing like this)
#bevy_console = { version = "0.12.0", git = "https://github.com/RichoDemus/bevy-console" }

# tilemaps (StarArawn)
bevy_ecs_tilemap = { version = "0.14", git = "https://github.com/StarArawn/bevy_ecs_tilemap", optional = true }

# FPS widget demo (dead-money)
# -move this into core (possible sickle and quill variants)
sickle_example = { version = "0.2", git = "https://github.com/knutsoned/sickle_example" }

# mesh terrain (ethereumdegen)
bevy_mesh_terrain = { version = "0.14", git = "https://github.com/knutsoned/bevy_mesh_terrain", branch = "bevy_014_upgrade", optional = true }

# quartz (tomara-x)
quartz = { version = "0.6", git = "https://github.com/knutsoned/quartz", default-features = false, optional = true }
bevy_pancam = { version = "0.11", git = "https://github.com/tomara-x/bevy_pancam" }

# Quill support (viridia)
bevy_quill = { version = "0.1", git = "https://github.com/knutsoned/quill", optional = true }

# editor core (Rust)
anyhow = "1"
futures-signals = "0.3"
native-dialog = "0.7"
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# editor core (Bevy ecosystem)
aery = "0.7"
bevy_mod_picking = "0.20"
bevy_simple_text_input = "0.8"
leafwing-input-manager = "0.14"

[features]
default = [ "bevy_dev_tools" ]
bevy_dev_tools = ["dep:bevy_dev_tools"]
bevy_ecs_tilemap = ["dep:bevy_ecs_tilemap"]
bevy_mesh_terrain = ["dep:bevy_mesh_terrain"]
bevy_quill = ["dep:bevy_quill"]
quartz = ["dep:quartz"]

[[example]]
name = "camera_control"
path = "examples/remote/camera_control.rs"
doc-scrape-examples = true

[package.metadata.example.camera_control]
name = "camera_control"
description = "A simple GUI client that can control a remote Bevy camera via the BRP"
category = "Remote Protocol"
wasm = false

[[example]]
name = "server"
path = "examples/remote/server.rs"
doc-scrape-examples = true

[package.metadata.example.server]
name = "server"
description = "A Bevy app that you can connect to with the BRP and edit"
category = "Remote Protocol"
wasm = false

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3
